---
apiVersion: v1
kind: Namespace
metadata:
  name: default
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hashivault
  namespace: default
  labels:
    app: hashivault
spec:
  serviceName: hashivault
  replicas: 1
  selector:
    matchLabels:
      app: hashivault
  template:
    metadata:
      labels:
        app: hashivault
    spec:
      terminationGracePeriodSeconds: 1800
      containers:
      - name: hashivault-server
        image: vault:1.6.2
        imagePullPolicy: Always
        ports:
        - containerPort: 8200
          name: intra-node
        resources:
          limits:
            cpu: "500m"
            memory: 1Gi
          requests:
            cpu: "500m"
            memory: 1Gi
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        env:
          - name: MAX_HEAP_SIZE
            value: 512M
          - name: HEAP_NEWSIZE
            value: 100M
          - name: VAULT_DEV_ROOT_TOKEN_ID
            value: sscBVAzql3gRCl3gscFVm30WSX
        volumeMounts:
        - name: hashivault-data
          mountPath: /vault/logs
          subPath: logs
        - name: hashivault-data
          mountPath: /vault/file
          subPath: file
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd
  volumeClaimTemplates:
  - metadata:
      name: hashivault-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: ibmc-vpc-block-10iops-tier
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hashivault
  name: hashivault
  namespace: default
spec:
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8200
  selector:
    app: hashivault
# ---
# apiVersion: getambassador.io/v2
# kind: Mapping
# metadata:
#   name: hashivault-mapping
#   namespace: default
# spec:
#   prefix: /hashi/v1/
#   rewrite: /v1/
#   service: hashivault:8200
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: external-balancer
  annotations:
    kubernetes.io/ingress.class: "public-iks-k8s-nginx"
spec:
  rules:
  - http:
      paths:
      - path: /hello/*
        pathType: Prefix
        backend:
          service:
            name: hello-world
            port:
              number: 80
      - path: /v1/*
        pathType: Prefix
        backend:
          service:
            name: hashivault
            port:
              number: 80
